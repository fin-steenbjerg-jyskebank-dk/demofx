name: Windows Native

on:
  push:
    branches: [ main ]
    tags:
      - '*'

env:
  APP_NAME: demofx
  
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: create build time info
      id: buildinfo
      shell: bash
      run: | 
        echo "##[set-output name=sha;]$(echo ${GITHUB_SHA})"
        echo "##[set-output name=version;]$(echo $GITHUB_REF | cut -d / -f 3)"
        echo "##[set-output name=time;]$(echo $(date))"
    - name: print buildinfo
      run: |
        echo "sha: ${{ steps.buildinfo.outputs.sha }}"
        echo "version: ${{ steps.buildinfo.outputs.version }}"
        echo "time: ${{ steps.buildinfo.outputs.time }}"
    - name: imprint buildinfo
      run: |
        sed -i "s/##VERSION##/${{ steps.buildinfo.outputs.version }}/g" 'src/main/java/dk/jyskebank/ocp/cluster/configurator/Version.java'
        sed -i "s/##BUILD_TIME##/${{ steps.buildinfo.outputs.time }}/g" 'src/main/java/dk/jyskebank/ocp/cluster/configurator/Version.java'
        sed -i "s/##SHA##/${{ steps.buildinfo.outputs.sha }}/g" 'src/main/java/dk/jyskebank/ocp/cluster/configurator/Version.java'
    - name: print buildinfo in file
      run: cat 'src/main/java/dk/jyskebank/ocp/cluster/configurator/Version.java'
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Visual Studio shell
      uses: egor-tensin/vs-shell@v1
    - name: Setup Gluon's GraalVM
      uses: gluonhq/setup-graalvm@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Make dist directory
      run: mkdir dist
    - name: Build native with Gradle
      run: ./gradlew.bat -s build nativeCompile nativeLink
      env:
        GRAALVM_HOME: ${{ env.JAVA_HOME }}
    - run: ls -l build/client/x86_64-windows
    - name: Copy native client to dist
      run: cp -r build/client/x86_64-windows/*.exe dist
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.APP_NAME }}.exe
        path: dist

