# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Linux

on:
  push:
    branches: [ main ]
    tags:

env:
  APP_NAME: demofx
  PACKAGE_NAME: demofx
  PACKAGE_VERSION: 0.0.1
  PACKAGE_MAINTAINER: Fin Steenbjerg <fin.steenbjerg@gmail.com>

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Access secrets
      env:
        UPLOAD_SECRET: ${{ secrets.HOME_UPLOADING_SECRET }}
      run: echo "Content of secret - $UPLOAD_SECRET"
    - uses: actions/checkout@v2
    - name: create version
      uses: fin-steenbjerg-jyskebank-dk/create-version-action@v1.2
      id: version-imprint
      with:
        file: 'src/main/java/dk/stonemountain/demo/demofx/Version.java'
    - name: Get the output time
      run: echo "The time was ${{ steps.transfer.outputs.time }}"
    - name: Setup GraalVM environment
      uses: DeLaGuardo/setup-graalvm@master
      with:
        graalvm-version: 20.3.0.java11
    - name: Update apt cache
      run: sudo apt update
    - name: Install libraries
      run: sudo apt install libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libgl-dev libgtk-3-dev libpango1.0-dev libxtst-dev
    - name: Make dist directory
      run: mkdir dist
    - name: Build native with Gradle
      run: ./gradlew -s build nativeCompile nativeLink
      env:
        GRAALVM_HOME: ${{ env.JAVA_HOME }} 
    - name: Copy native client to dist
      run: cp build/client/x86_64-linux/${{ env.APP_NAME }} dist
    - name: Transfer file
      uses: fin-steenbjerg-jyskebank-dk/transfer-file-action@v1.1
      id: transfer
      with:
        file-to-transfer: 'README.md'
        url-to-transfer-to: 'https://installables.stonemountain.dk/installables/{instId}/downloadables/{downId}'
        query-param-with-size: 'size'
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.APP_NAME }} 
        path: dist
    - name: Build DEB
      run: |
        mkdir -p .debpkg/usr/bin
        mkdir -p .debpkg/usr/share/applications
        mkdir -p .debpkg/usr/share/jb/icons
        cp dist/demofx .debpkg/usr/bin/${{ env.APP_NAME }} 
        cp src/os-client/gnome/${{ env.APP_NAME }}.png .debpkg/usr/share/jb/icons/${{ env.APP_NAME }}.png 
        cp src/os-client/gnome/${{ env.APP_NAME }}.desktop .debpkg/usr/share/applications/${{ env.APP_NAME }}.desktop          
        chmod +x .debpkg/usr/bin/${{ env.APP_NAME }}          
    - uses: jiro4989/build-deb-action@v2
      id: build_deb
      with:
        package: ${{ env.PACKAGE_NAME }}
        package_root: .debpkg
        maintainer: ${{ env.PACKAGE_MAINTAINER }}
        version: ${{ env.PACKAGE_VERSION }}
        arch: amd64      
        desc: Debian Package for ${{ env.APP_NAME }}
    - name: Upload DEB
      uses: actions/upload-artifact@v2
      with:
        name:  ${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.debian
        path: |
            ./*.deb
    - name: Build RPM
      uses: Antikythera/build-rpm@v1
      id: build_rpm
      with:
        spec_file: src/os-client/rpm/${{ env.APP_NAME }}.spec
        sources: |
          dist/${{ env.APP_NAME }}
          src/os-client/gnome/${{ env.APP_NAME }}.png
          src/os-client/gnome/${{ env.APP_NAME }}.desktop
        variables: |
          _version=${{ env.PACKAGE_VERSION }}
          _release=0          
    - name: Upload RPM
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.build_rpm.outputs.rpm_package_name }}
        path: ${{ steps.build_rpm.outputs.rpm_package_path }}
